@page "/Countries"
@using Application.Features.CountryFeatures.Commands
@using BlazorWebUI.Components.Countries
@inject CountryService countryService
@inject LoadingService loadingService
<MudCard>
    <CountryForm Country="Country" OnCountrySaved="SaveCountryAsync" />
</MudCard>
<br />
<CountryTable Countrys="Countrys" OnEdit="EditCountry" OnDelete="DeleteCountry" />


@code {
    private List<CountryDto> Countrys = new();
    private CountryDto Country = new();

    protected override async Task OnInitializedAsync() => await LoadCountries();

    private async Task SaveCountryAsync((CreateCountryCommand?, UpdateCountryCommand?) result)
    {
        var (createCountryCommand, updateCountryCommand) = result;

        if (createCountryCommand != null)
            await countryService.SaveCountryAsync(createCountryCommand);
        else if (updateCountryCommand != null)
            await countryService.UpdateCountryAsync(updateCountryCommand);

        Country = new();
        await LoadCountries();
    }
    private async Task EditCountry(int id) => Country = await countryService.GetCountryAsync(id);

    private async Task DeleteCountry(int id)
    {
        await countryService.DeleteCountryAsync(id);
        await LoadCountries();
    }

    private async Task LoadCountries()
    {
        loadingService.Show();
        Countrys = await countryService.GetAllCountrysAsync();
        loadingService.Hide();
    }
}
