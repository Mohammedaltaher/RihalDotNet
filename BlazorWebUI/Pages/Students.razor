@page "/Students"
@using Application.Features.StudentFeatures.Commands
@using BlazorWebUI.Components.Students
@inject StudentService StudentService
@inject LoadingService loadingService
<MudCard>
    <StudentForm Student="student" OnStudentSaved="SaveStudentAsync" />
</MudCard>
<br />
<StudentTable Students="students" OnEdit="EditStudent" OnDelete="DeleteStudent" />


@code {
    private List<StudentDto> students = new();
    private StudentDto student = new();

    protected override async Task OnInitializedAsync() => await LoadStudents();
    private async Task EditStudent(int id) => student = await StudentService.GetStudentsAsync(id);


    private async Task SaveStudentAsync((CreateStudentCommand?, UpdateStudentCommand?) result)
    {
        var (createStudentCommand, updateStudentCommand) = result;

        if (createStudentCommand != null)
            await StudentService.SaveStudentAsync(createStudentCommand);
        else if (updateStudentCommand != null)
            await StudentService.UpdateStudentAsync(updateStudentCommand);

        student = new();
        await LoadStudents();
    }

    private async Task DeleteStudent(int id)
    {
        await StudentService.DeleteStudentAsync(id);
        await LoadStudents();
    }

    private async Task LoadStudents()
    {
        loadingService.Show();

        students = await StudentService.GetAllStudentsAsync();

        loadingService.Hide();
    }
}
