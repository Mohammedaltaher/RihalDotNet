@page "/Classes"
@using Application.Features.ClassFeatures.Commands
@using BlazorWebUI.Components.Classes
@inject ClassService ClassService
@inject LoadingService loadingService
<MudCard>
    <ClassForm Class="Class" OnClassSaved="SaveClassAsync" />
</MudCard>
<br />
<ClassTable Classs="Classs" OnEdit="EditClass" OnDelete="DeleteClass" />


@code {
    private List<ClassDto> Classs = new();
    private ClassDto Class = new();
    protected override async Task OnInitializedAsync() => await LoadClasss();
  
   
    private async Task SaveClassAsync((CreateClassCommand?, UpdateClassCommand?) result)
    {
        var (createClassCommand, updateClassCommand) = result;

        if (createClassCommand != null)
            await ClassService.SaveClassAsync(createClassCommand);
        else if (updateClassCommand != null)
            await ClassService.UpdateClassAsync(updateClassCommand);

        Class = new();
        await LoadClasss();
    }
    private async Task EditClass(int id) => Class = await ClassService.GetClasssAsync(id);
    private async Task DeleteClass(int id)
    {
        await ClassService.DeleteClassAsync(id);
        await LoadClasss();
    }
    private async Task LoadClasss()
    {
        loadingService.Show();
        await Task.Delay(1000);
        Classs = await ClassService.GetAllClasssAsync();
        loadingService.Hide();
    }
}
